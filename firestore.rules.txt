rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /groups/{groupId} {
      allow read: if true;
      allow write: if request.auth != null && (
        // Allow admins to write
        (resource.data.admins != null && resource.data.admins[request.auth.uid] == true)
        ||
        // Allow users to add themselves to members (simplified)
        request.resource.data.members[request.auth.uid] != null
        ||
        // Allow users to add themselves to admins (simplified)
        request.resource.data.admins[request.auth.uid] == true
      );
      allow create: if request.auth != null;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    match /groupInvites/{inviteId} {
      allow read, write: if request.auth != null;
    }

    match /groups/{groupId}/chores/{choreId} {
      allow read: if request.auth != null &&
                  get(/databases/$(database)/documents/groups/$(groupId))
                    .data.members[request.auth.uid] != null;

      allow write, delete: if request.auth != null &&
                           get(/databases/$(database)/documents/groups/$(groupId))
                             .data.admins[request.auth.uid] == true;
    }
  }
} 